Packages and Crates
A crate is the smallest amount of code that Rust compiler considers at time.
A crate can come in one of two forms: a binary crate or a library crate. Binary crates are programs you can compile to an executable that you can run, such as a CLI or a server. each must have a function called main that defines what happens when the executable runs.
Library crates don't have a main function, and they don't compile to an executable. Instead, they define functionality intended to be shared with multiple projects.(ex: the rand crate provides functionality that generate random numbers).
The crate root is a source file that Rust compiler starts from and makes up the root module of your crate.
A package is a bundle of one or more crates that provides a set of functionality. It contains a Cargo.toml file that describes how to build those crates. A package can contain as many binary crates as you like, but at most only one library crate. A package must contain at least one crate, whether htat's a library or binary crate.